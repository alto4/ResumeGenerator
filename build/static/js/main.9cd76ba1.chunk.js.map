{"version":3,"sources":["components/ResumeHeader.js","components/EducationSection.js","components/ExperienceSection.js","components/PreviewButton.js","components/Resume.js","App.js","index.js"],"names":["ResumeHeader","props","className","type","name","placeholder","onChange","EducationSection","toggleFormDisplay","setState","showForm","state","showAddForm","e","clearFormFields","preventDefault","showEditForm","entryEditing","target","getAttribute","entries","credential","program","school","date","description","cancelEntry","addNewEntry","addEducation","split","editEntry","editEducation","removeEntry","removeEducation","value","onClick","this","htmlFor","map","entry","index","data-id","detail","React","Component","ExperienceSection","position","company","location","console","log","alert","addExperience","editExperience","removeExperience","PreviewButton","togglePreview","preview","buttons","document","querySelectorAll","previewButton","querySelector","forms","forEach","button","style","display","form","Resume","addEntry","section","deleteEntry","splice","updatedEntry","Object","keys","key","email","phone","city","province","githubURL","linkedinURL","portfolioURL","education","experience","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OA0EeA,MAxEf,SAAsBC,GACpB,OACE,sBAAKC,UAAU,gBAAf,UACE,uBACEC,KAAK,OACLC,KAAK,OACLC,YAAY,YACZC,SAAUL,EAAMK,SAChBJ,UAAU,eAEZ,sBAAKA,UAAU,eAAf,UACE,gCACE,mBAAGA,UAAU,qBACb,uBACEC,KAAK,OACLC,KAAK,eACLC,YAAY,gBACZC,SAAUL,EAAMK,cAGpB,gCACE,mBAAGJ,UAAU,kBACb,uBACEC,KAAK,OACLC,KAAK,YACLC,YAAY,aACZC,SAAUL,EAAMK,cAGpB,gCACE,mBAAGJ,UAAU,oBACb,uBACEC,KAAK,OACLC,KAAK,cACLC,YAAY,eACZC,SAAUL,EAAMK,iBAKtB,sBAAKJ,UAAU,kBAAf,UACE,uBACEC,KAAK,OACLC,KAAK,QACLC,YAAY,gBACZC,SAAUL,EAAMK,WAElB,uBACEH,KAAK,OACLC,KAAK,QACLC,YAAY,eACZC,SAAUL,EAAMK,WAElB,sBAAKJ,UAAU,kBAAf,UACE,uBACEC,KAAK,OACLC,KAAK,OACLC,YAAY,OACZC,SAAUL,EAAMK,WAElB,uBACEH,KAAK,OACLC,KAAK,WACLC,YAAY,WACZC,SAAUL,EAAMK,qBCwLbC,E,kDAvPb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAeRO,kBAAoB,WAClB,EAAKC,SAAS,CAAEC,UAAW,EAAKC,MAAMD,YAjBrB,EAoBnBE,YAAc,SAACC,GACb,EAAKC,kBACLD,EAAEE,kBAC0B,IAAxB,EAAKJ,MAAMD,UACb,EAAKF,oBAGP,EAAKC,SAAS,CAAEG,aAAa,EAAMI,cAAc,KA3BhC,EA8BnBA,aAAe,SAACH,GACdA,EAAEE,kBAE0B,IAAxB,EAAKJ,MAAMD,UACb,EAAKF,oBAGP,EAAKC,SAAS,CACZO,cAAc,EACdJ,aAAa,EACbK,aAAcJ,EAAEK,OAAOC,aAAa,aAVlB,MAclB,EAAKlB,MAAMmB,QAAQP,EAAEK,OAAOC,aAAa,YADrCE,EAbc,EAadA,WAAYC,EAbE,EAaFA,QAASC,EAbP,EAaOA,OAAQC,EAbf,EAaeA,KAAMC,EAbrB,EAaqBA,YAGzC,EAAKhB,SAAS,CAAEY,aAAYC,UAASC,SAAQC,OAAMC,iBA9ClC,EAiDnBC,YAAc,SAACb,GACbA,EAAEE,iBAEF,EAAKP,qBApDY,EAuDnBmB,YAAc,SAACd,GACbA,EAAEE,iBAEF,IAAIM,EAAa,EAAKV,MAAMU,WACxBC,EAAU,EAAKX,MAAMW,QACrBC,EAAS,EAAKZ,MAAMY,OACpBC,EAAO,EAAKb,MAAMa,KAClBC,EAAc,EAAKd,MAAMc,YAE7B,EAAKxB,MAAM2B,aACT,CACEP,aACAC,UACAC,SACAC,OACAC,YAAaA,EAAYI,MAAM,MAEjC,aAGF,EAAKpB,SAAS,CAAEG,aAAc,EAAKD,MAAMC,cACzC,EAAKJ,oBACL,EAAKM,mBA7EY,EAgFnBgB,UAAY,SAACjB,GACXA,EAAEE,iBAEF,EAAKd,MAAM8B,cAAc,EAAKpB,MAAMM,aAAc,YAAa,CAC7DI,WAAY,EAAKV,MAAMU,WACvBG,KAAM,EAAKb,MAAMa,KACjBD,OAAQ,EAAKZ,MAAMY,OACnBD,QAAS,EAAKX,MAAMW,QACpBG,YAAa,EAAKd,MAAMc,YAAYI,MAAM,OAG5C,EAAKrB,oBACL,EAAKM,mBA5FY,EA+FnBkB,YAAc,SAACnB,GACbA,EAAEE,iBAEF,EAAKd,MAAMgC,gBAAgBpB,EAAEK,OAAOC,aAAa,WAAY,cAlG5C,EAqGnBL,gBAAkB,WAChB,EAAKL,SAAS,CACZY,WAAY,GACZC,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,YAAa,MA3GE,EA+GnBnB,SAAW,SAACO,GACV,IAAIK,EAASL,EAAEK,OAAOd,KAClB8B,EAAQrB,EAAEK,OAAOgB,MAErB,EAAKzB,UAAS,SAACE,EAAOV,GAAR,sBACXiB,EAASgB,OAjHZ,EAAKvB,MAAQ,CACXD,UAAU,EACVE,aAAa,EACbI,cAAc,EACdC,aAAc,KACdI,WAAY,GACZE,OAAQ,GACRC,KAAM,GACNF,QAAS,GACTG,YAAa,CAAC,KAZC,E,0CAwHnB,WAAU,IAAD,OACP,OACE,sBAAKvB,UAAU,oBAAf,UACE,2CACA,wBACEA,UAAU,cACViC,SAAUC,KAAK5B,kBAAmB4B,KAAKxB,aAFzC,+BAOCwB,KAAKzB,MAAMD,UACV,iCACG0B,KAAKzB,MAAMC,aAAe,yDAC1BwB,KAAKzB,MAAMK,cAAgB,sDAE5B,uBAAOqB,QAAQ,aAAf,yBACA,uBACElC,KAAK,OACLC,KAAK,aACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMU,aAGpB,uBAAOgB,QAAQ,UAAf,sBACA,uBACElC,KAAK,OACLC,KAAK,UACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMW,UAGpB,uBAAOe,QAAQ,SAAf,qBACA,uBACElC,KAAK,OACLC,KAAK,SACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMY,SAGpB,uBAAOc,QAAQ,OAAf,mBACA,uBACElC,KAAK,OACLC,KAAK,OACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMa,OAGpB,uBAAOa,QAAQ,cAAf,0BACA,uBACElC,KAAK,OACLC,KAAK,cACLE,SAAU8B,KAAK9B,SACfmB,YAAaW,KAAKzB,MAAMc,cAGzBW,KAAKzB,MAAMC,aACV,sBAAKV,UAAU,mBAAf,UACE,wBAAQA,UAAU,cAAciC,QAASC,KAAKT,YAA9C,iBAGA,wBAAQzB,UAAU,iBAAiBiC,QAASC,KAAKV,YAAjD,uBAMHU,KAAKzB,MAAMK,cACV,sBAAKd,UAAU,oBAAf,UACE,wBAAQA,UAAU,eAAeiC,QAASC,KAAKN,UAA/C,kBAGA,wBAAQ5B,UAAU,iBAAiBiC,QAASC,KAAKV,YAAjD,0BAQR,qBAAKxB,UAAU,8BAAf,SACE,kCACGkC,KAAKnC,MAAMmB,QAAQkB,KAAI,SAACC,EAAOC,GAC9B,OACE,sBAAKtC,UAAU,kBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,+BACGqC,EAAMlB,WADT,MACwBkB,EAAMjB,WAG9B,gCACE,iCAAOiB,EAAMf,KAAb,OACA,wBACEtB,UAAU,iBACVuC,UAASD,EACTL,QAAS,EAAKH,YAHhB,eAOA,wBACE9B,UAAU,eACVuC,UAASD,EACTL,QAAS,EAAKnB,aAHhB,wBASJ,4BACE,iCAASuB,EAAMhB,WAGjB,6BACGgB,EAAMd,YAAYa,KAAI,SAACI,EAAQF,GAC9B,OAAO,6BAAiBE,GAARF,UA9BgBA,iB,GA7MvBG,IAAMC,WC8PtBC,E,kDA7Pb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAeRO,kBAAoB,WAClB,EAAKC,SAAS,CAAEC,UAAW,EAAKC,MAAMD,YAjBrB,EAoBnBM,aAAe,SAACH,GACdA,EAAEE,kBAE0B,IAAxB,EAAKJ,MAAMD,UACb,EAAKF,oBAGP,EAAKC,SAAS,CACZO,cAAc,EACdJ,aAAa,EACbK,aAAcJ,EAAEK,OAAOC,aAAa,aAVlB,MAclB,EAAKlB,MAAMmB,QAAQP,EAAEK,OAAOC,aAAa,YADrC2B,EAbc,EAadA,SAAUC,EAbI,EAaJA,QAASC,EAbL,EAaKA,SAAUxB,EAbf,EAaeA,KAAMC,EAbrB,EAaqBA,YAGzC,EAAKhB,SAAS,CAAEqC,WAAUC,UAASC,WAAUxB,OAAMC,iBApClC,EAuCnBb,YAAc,SAACC,GACb,EAAKC,kBACLD,EAAEE,kBAC0B,IAAxB,EAAKJ,MAAMD,UACb,EAAKF,oBAGP,EAAKC,SAAS,CAAEG,aAAa,EAAMI,cAAc,KA9ChC,EAiDnBU,YAAc,SAACb,GACbA,EAAEE,iBAEF,EAAKP,qBApDY,EAuDnBmB,YAAc,SAACd,GACbA,EAAEE,iBAEF,IAAI+B,EAAW,EAAKnC,MAAMmC,SACtBC,EAAU,EAAKpC,MAAMoC,QACrBC,EAAW,EAAKrC,MAAMqC,SACtBxB,EAAO,EAAKb,MAAMa,KAClBC,EAAc,EAAKd,MAAMc,YAE7BwB,QAAQC,IAAI,2BAA6BJ,EAAWC,GACpDI,MAAM,wBAA0B1B,GAChC,EAAKxB,MAAMmD,cACT,CACEN,WACAC,UACAC,WACAxB,OACAC,YAAa,CACXA,EACA,kBACA,2BACA,2BAGJ,cAGF,EAAKhB,SAAS,CAAEG,aAAc,EAAKD,MAAMD,WACzC,EAAKF,oBACL,EAAKM,mBApFY,EAuFnBgB,UAAY,SAACjB,GACXA,EAAEE,iBAEF,EAAKd,MAAMoD,eAAe,EAAK1C,MAAMM,aAAc,aAAc,CAC/D6B,SAAU,EAAKnC,MAAMmC,SACrBC,QAAS,EAAKpC,MAAMoC,QACpBC,SAAU,EAAKrC,MAAMqC,SACrBxB,KAAM,EAAKb,MAAMa,KACjBC,YAAa,CAAC,IAAK,IAAK,OAG1B,EAAKjB,oBACL,EAAKM,mBAnGY,EAsGnBkB,YAAc,SAACnB,GACbA,EAAEE,iBAEF,EAAKd,MAAMqD,iBAAiBzC,EAAEK,OAAOC,aAAa,WAAY,eAzG7C,EA4GnBL,gBAAkB,WAChB,EAAKL,SAAS,CACZqC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVxB,KAAM,GACNC,YAAa,MAlHE,EAsHnBnB,SAAW,SAACO,GACV,IAAIK,EAASL,EAAEK,OAAOd,KAClB8B,EAAQrB,EAAEK,OAAOgB,MAErB,EAAKzB,UAAS,SAACE,EAAOV,GAAR,sBACXiB,EAASgB,OAxHZ,EAAKvB,MAAQ,CACXD,UAAU,EACVE,aAAa,EACbI,cAAc,EACdC,aAAc,KACd6B,SAAU,GACVC,QAAS,GACTC,SAAU,GACVxB,KAAM,GACNC,YAAa,IAZE,E,0CA+HnB,WAAU,IAAD,OACP,OACE,sBAAKvB,UAAU,qBAAf,UACE,4CACA,wBACEA,UAAU,cACViC,SAAUC,KAAK5B,kBAAmB4B,KAAKxB,aAFzC,gCAOCwB,KAAKzB,MAAMD,UACV,iCACG0B,KAAKzB,MAAMC,aAAe,0DAC1BwB,KAAKzB,MAAMK,cAAgB,uDAE5B,uBAAOqB,QAAQ,WAAf,uBACA,uBACElC,KAAK,OACLC,KAAK,WACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMmC,WAGpB,uBAAOT,QAAQ,UAAf,sBACA,uBACElC,KAAK,OACLC,KAAK,UACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMoC,UAGpB,uBAAOV,QAAQ,WAAf,uBACA,uBACElC,KAAK,OACLC,KAAK,WACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMqC,WAGpB,uBAAOX,QAAQ,OAAf,mBACA,uBACElC,KAAK,OACLC,KAAK,OACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMa,OAGpB,uBAAOa,QAAQ,cAAf,0BACA,uBACElC,KAAK,OACLC,KAAK,cACLE,SAAU8B,KAAK9B,SACf4B,MAAOE,KAAKzB,MAAMc,cAGnBW,KAAKzB,MAAMC,aACV,sBAAKV,UAAU,mBAAf,UACE,wBAAQA,UAAU,cAAciC,QAASC,KAAKT,YAA9C,iBAGA,wBAAQzB,UAAU,iBAAiBiC,QAASC,KAAKV,YAAjD,uBAMHU,KAAKzB,MAAMK,cACV,sBAAKd,UAAU,oBAAf,UACE,wBAAQA,UAAU,eAAeiC,QAASC,KAAKN,UAA/C,kBAGA,wBAAQ5B,UAAU,iBAAiBiC,QAASC,KAAKV,YAAjD,0BAQR,qBAAKxB,UAAU,+BAAf,SACE,kCACGkC,KAAKnC,MAAMmB,QAAQkB,KAAI,SAACC,EAAOC,GAC9B,OACE,sBAAKtC,UAAU,mBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,6BAAKqC,EAAMO,WACX,gCACE,iCAAOP,EAAMf,KAAb,OACA,wBACEtB,UAAU,iBACVuC,UAASD,EACTL,QAAS,EAAKH,YAHhB,eAOA,wBACE9B,UAAU,eACVuC,UAASD,EACTL,QAAS,EAAKnB,aAHhB,wBASJ,4BACE,mCACGuB,EAAMQ,QADT,MACqBR,EAAMS,cAI7B,6BACGT,EAAMd,YAAYa,KAAI,SAACI,EAAQF,GAC9B,OAAO,6BAAiBE,GAARF,UA7BiBA,iB,GApNvBG,IAAMC,WCgDvBW,E,kDA/Cb,WAAYtD,GAAQ,IAAD,8BACjB,cAAMA,IAORuD,cAAgB,SAAC3C,GACfA,EAAEE,iBACF,EAAKN,SAAS,CAAEgD,SAAU,EAAK9C,MAAM8C,UAErC,IAAIC,EAAUC,SAASC,iBAAiB,UACpCC,EAAgBF,SAASG,cAAc,gBACvCC,EAAQJ,SAASC,iBAAiB,QAEtCF,EAAQM,SAAQ,SAACC,GACc,SAAzBA,EAAOC,MAAMC,QACfF,EAAOC,MAAMC,QAAU,QAEvBF,EAAOC,MAAMC,QAAU,QAClB,EAAKxD,MAAM8C,UACdE,SAASG,cAAc,qBAAqBI,MAAMC,QAAU,YAKlEJ,EAAMC,SAAQ,SAACI,GACc,SAAvBA,EAAKF,MAAMC,QACbC,EAAKF,MAAMC,QAAU,OAErBC,EAAKF,MAAMC,QAAU,UAIzBN,EAAcK,MAAMC,QAAU,SAhC9B,EAAKxD,MAAQ,CACX8C,SAAS,GAJM,E,0CAsCnB,WACE,OACE,wBAAQtB,QAASC,KAAKoB,cAAetD,UAAU,kBAA/C,SACGkC,KAAKzB,MAAM8C,QAAU,OAAS,gB,GA1CXb,aCgFbyB,E,kDA3Eb,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IAgBRK,SAAW,SAACO,GACV,IAAIK,EAASL,EAAEK,OAAOd,KAClB8B,EAAQrB,EAAEK,OAAOgB,MAErB,EAAKzB,UAAS,SAACE,EAAOV,GAAR,sBACXiB,EAASgB,OAtBK,EA0BnBoC,SAAW,SAAC/B,EAAOgC,GACjB,EAAK9D,SAAL,eACG8D,EADH,sBACiB,EAAK5D,MAAM4D,IAD5B,CACsChC,OA5BrB,EAgCnBiC,YAAc,SAAChC,EAAO+B,GACpB,IAAInD,EAAO,YAAO,EAAKT,MAAM4D,KAEd,IAAX/B,IACFpB,EAAQqD,OAAOjC,EAAO,GACtB,EAAK/B,SAAL,eAAiB8D,EAAUnD,MArCZ,EAyCnBU,UAAY,SAACU,EAAO+B,EAASG,GAC3B,IAAItD,EAAU,EAAKT,MAAM4D,GACrBhC,EAAQnB,EAAQoB,GACTmC,OAAOC,KAAKrC,GAElByB,SAAQ,SAACa,GACZtC,EAAMsC,GAAOH,EAAaG,MAG5B,EAAKpE,SAAL,eAAiB8D,EAAUnD,KA/C3B,EAAKT,MAAQ,CACXP,KAAM,GACN0E,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,UAAW,GACXC,WAAY,IAbG,E,0CAqDnB,WACE,OACE,sBAAKpF,UAAU,mBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAcI,SAAU8B,KAAK9B,WAC7B,cAAC,EAAD,CACEsB,aAAcQ,KAAKkC,SACnBvC,cAAeK,KAAKN,UACpBG,gBAAiBG,KAAKoC,YACtBpD,QAASgB,KAAKzB,MAAM0E,YAEtB,cAAC,EAAD,CACEjC,cAAehB,KAAKkC,SACpBjB,eAAgBjB,KAAKN,UACrBwB,iBAAkBlB,KAAKoC,YACvBpD,QAASgB,KAAKzB,MAAM2E,oB,GArET3C,IAAMC,WCQZ2C,MAXf,WACE,OACE,sBAAKrF,UAAU,MAAf,UACE,iCACE,oDAEF,cAAC,EAAD,QCLNsF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,W","file":"static/js/main.9cd76ba1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ResumeHeader(props) {\r\n  return (\r\n    <div className=\"resume-header\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Your Name\"\r\n        onChange={props.onChange}\r\n        className=\"name-input\"\r\n      />\r\n      <div className=\"social-links\">\r\n        <div>\r\n          <i className=\"fa fa-code fa-sm\"></i>\r\n          <input\r\n            type=\"text\"\r\n            name=\"portfolioURL\"\r\n            placeholder=\"Portfolio URL\"\r\n            onChange={props.onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <i className=\"fab fa-github\"></i>\r\n          <input\r\n            type=\"text\"\r\n            name=\"githubURL\"\r\n            placeholder=\"GitHub URL\"\r\n            onChange={props.onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <i className=\"fab fa-linkedin\"></i>\r\n          <input\r\n            type=\"text\"\r\n            name=\"linkedinURL\"\r\n            placeholder=\"Linkedin URL\"\r\n            onChange={props.onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"contact-details\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email Address\"\r\n          onChange={props.onChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"phone\"\r\n          placeholder=\"Phone Number\"\r\n          onChange={props.onChange}\r\n        />\r\n        <div className=\"location-inputs\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"city\"\r\n            placeholder=\"City\"\r\n            onChange={props.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"province\"\r\n            placeholder=\"Province\"\r\n            onChange={props.onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResumeHeader;\r\n","import React from 'react';\r\n\r\nclass EducationSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showForm: false,\r\n      showAddForm: false,\r\n      showEditForm: false,\r\n      entryEditing: null,\r\n      credential: '',\r\n      school: '',\r\n      date: '',\r\n      program: '',\r\n      description: [''],\r\n    };\r\n  }\r\n\r\n  toggleFormDisplay = () => {\r\n    this.setState({ showForm: !this.state.showForm });\r\n  };\r\n\r\n  showAddForm = (e) => {\r\n    this.clearFormFields();\r\n    e.preventDefault();\r\n    if (this.state.showForm === false) {\r\n      this.toggleFormDisplay();\r\n    }\r\n\r\n    this.setState({ showAddForm: true, showEditForm: false });\r\n  };\r\n\r\n  showEditForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.showForm === false) {\r\n      this.toggleFormDisplay();\r\n    }\r\n\r\n    this.setState({\r\n      showEditForm: true,\r\n      showAddForm: false,\r\n      entryEditing: e.target.getAttribute('data-id'),\r\n    });\r\n\r\n    let { credential, program, school, date, description } =\r\n      this.props.entries[e.target.getAttribute('data-id')];\r\n\r\n    this.setState({ credential, program, school, date, description });\r\n  };\r\n\r\n  cancelEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.toggleFormDisplay();\r\n  };\r\n\r\n  addNewEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    let credential = this.state.credential;\r\n    let program = this.state.program;\r\n    let school = this.state.school;\r\n    let date = this.state.date;\r\n    let description = this.state.description;\r\n\r\n    this.props.addEducation(\r\n      {\r\n        credential,\r\n        program,\r\n        school,\r\n        date,\r\n        description: description.split(','),\r\n      },\r\n      'education'\r\n    );\r\n\r\n    this.setState({ showAddForm: !this.state.showAddForm });\r\n    this.toggleFormDisplay();\r\n    this.clearFormFields();\r\n  };\r\n\r\n  editEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.editEducation(this.state.entryEditing, 'education', {\r\n      credential: this.state.credential,\r\n      date: this.state.date,\r\n      school: this.state.school,\r\n      program: this.state.program,\r\n      description: this.state.description.split(','),\r\n    });\r\n\r\n    this.toggleFormDisplay();\r\n    this.clearFormFields();\r\n  };\r\n\r\n  removeEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.removeEducation(e.target.getAttribute('data-id'), 'education');\r\n  };\r\n\r\n  clearFormFields = () => {\r\n    this.setState({\r\n      credential: '',\r\n      program: '',\r\n      school: '',\r\n      date: '',\r\n      description: '',\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    let target = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    this.setState((state, props) => ({\r\n      [target]: value,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"education-section\">\r\n        <h2>Education</h2>\r\n        <button\r\n          className=\"btn btn-add\"\r\n          onClick={(this.toggleFormDisplay, this.showAddForm)}\r\n        >\r\n          Add New Education\r\n        </button>\r\n\r\n        {this.state.showForm && (\r\n          <form>\r\n            {this.state.showAddForm && <h4>Add New Education Entry</h4>}\r\n            {this.state.showEditForm && <h4>Edit Education Entry</h4>}\r\n\r\n            <label htmlFor=\"credential\">Credential:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"credential\"\r\n              onChange={this.onChange}\r\n              value={this.state.credential}\r\n            />\r\n\r\n            <label htmlFor=\"program\">Program:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"program\"\r\n              onChange={this.onChange}\r\n              value={this.state.program}\r\n            />\r\n\r\n            <label htmlFor=\"school\">School:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"school\"\r\n              onChange={this.onChange}\r\n              value={this.state.school}\r\n            />\r\n\r\n            <label htmlFor=\"date\">Date:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"date\"\r\n              onChange={this.onChange}\r\n              value={this.state.date}\r\n            />\r\n\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              onChange={this.onChange}\r\n              description={this.state.description}\r\n            />\r\n\r\n            {this.state.showAddForm && (\r\n              <div className=\"add-form-buttons\">\r\n                <button className=\"btn btn-add\" onClick={this.addNewEntry}>\r\n                  Add\r\n                </button>\r\n                <button className=\"btn btn-cancel\" onClick={this.cancelEntry}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.showEditForm && (\r\n              <div className=\"edit-form-buttons\">\r\n                <button className=\"btn btn-edit\" onClick={this.editEntry}>\r\n                  Edit\r\n                </button>\r\n                <button className=\"btn btn-cancel\" onClick={this.cancelEntry}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n          </form>\r\n        )}\r\n\r\n        <div className=\"education-details-container\">\r\n          <article>\r\n            {this.props.entries.map((entry, index) => {\r\n              return (\r\n                <div className=\"education-entry\" key={index}>\r\n                  <div className=\"education-entry-header\">\r\n                    <h3>\r\n                      {entry.credential} - {entry.program}\r\n                    </h3>\r\n\r\n                    <div>\r\n                      <span>{entry.date} </span>\r\n                      <button\r\n                        className=\"btn btn-delete\"\r\n                        data-id={index}\r\n                        onClick={this.removeEntry}\r\n                      >\r\n                        X\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-edit\"\r\n                        data-id={index}\r\n                        onClick={this.showEditForm}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <p>\r\n                    <strong>{entry.school}</strong>\r\n                  </p>\r\n\r\n                  <ul>\r\n                    {entry.description.map((detail, index) => {\r\n                      return <li key={index}>{detail}</li>;\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })}\r\n          </article>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EducationSection;\r\n","import React from 'react';\r\n\r\nclass ExperienceSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showForm: false,\r\n      showAddForm: false,\r\n      showEditForm: false,\r\n      entryEditing: null,\r\n      position: '',\r\n      company: '',\r\n      location: '',\r\n      date: '',\r\n      description: [],\r\n    };\r\n  }\r\n\r\n  toggleFormDisplay = () => {\r\n    this.setState({ showForm: !this.state.showForm });\r\n  };\r\n\r\n  showEditForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.showForm === false) {\r\n      this.toggleFormDisplay();\r\n    }\r\n\r\n    this.setState({\r\n      showEditForm: true,\r\n      showAddForm: false,\r\n      entryEditing: e.target.getAttribute('data-id'),\r\n    });\r\n\r\n    let { position, company, location, date, description } =\r\n      this.props.entries[e.target.getAttribute('data-id')];\r\n\r\n    this.setState({ position, company, location, date, description });\r\n  };\r\n\r\n  showAddForm = (e) => {\r\n    this.clearFormFields();\r\n    e.preventDefault();\r\n    if (this.state.showForm === false) {\r\n      this.toggleFormDisplay();\r\n    }\r\n\r\n    this.setState({ showAddForm: true, showEditForm: false });\r\n  };\r\n\r\n  cancelEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.toggleFormDisplay();\r\n  };\r\n\r\n  addNewEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    let position = this.state.position;\r\n    let company = this.state.company;\r\n    let location = this.state.location;\r\n    let date = this.state.date;\r\n    let description = this.state.description;\r\n\r\n    console.log('adding to new experience' + position + company);\r\n    alert('description value is ' + description);\r\n    this.props.addExperience(\r\n      {\r\n        position,\r\n        company,\r\n        location,\r\n        date,\r\n        description: [\r\n          description,\r\n          'Teamwork skills',\r\n          'Critical analysis skills',\r\n          'Problem-solving skills',\r\n        ],\r\n      },\r\n      'experience'\r\n    );\r\n\r\n    this.setState({ showAddForm: !this.state.showForm });\r\n    this.toggleFormDisplay();\r\n    this.clearFormFields();\r\n  };\r\n\r\n  editEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.editExperience(this.state.entryEditing, 'experience', {\r\n      position: this.state.position,\r\n      company: this.state.company,\r\n      location: this.state.location,\r\n      date: this.state.date,\r\n      description: ['1', '2', '3'],\r\n    });\r\n\r\n    this.toggleFormDisplay();\r\n    this.clearFormFields();\r\n  };\r\n\r\n  removeEntry = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.removeExperience(e.target.getAttribute('data-id'), 'experience');\r\n  };\r\n\r\n  clearFormFields = () => {\r\n    this.setState({\r\n      position: '',\r\n      company: '',\r\n      location: '',\r\n      date: '',\r\n      description: '',\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    let target = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    this.setState((state, props) => ({\r\n      [target]: value,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"experience-section\">\r\n        <h2>Experience</h2>\r\n        <button\r\n          className=\"btn btn-add\"\r\n          onClick={(this.toggleFormDisplay, this.showAddForm)}\r\n        >\r\n          Add New Experience\r\n        </button>\r\n\r\n        {this.state.showForm && (\r\n          <form>\r\n            {this.state.showAddForm && <h4>Add New Experience Entry</h4>}\r\n            {this.state.showEditForm && <h4>Edit Experience Entry</h4>}\r\n\r\n            <label htmlFor=\"position\">Position:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"position\"\r\n              onChange={this.onChange}\r\n              value={this.state.position}\r\n            />\r\n\r\n            <label htmlFor=\"company\">Company:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"company\"\r\n              onChange={this.onChange}\r\n              value={this.state.company}\r\n            />\r\n\r\n            <label htmlFor=\"location\">Location:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              onChange={this.onChange}\r\n              value={this.state.location}\r\n            />\r\n\r\n            <label htmlFor=\"date\">Date:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"date\"\r\n              onChange={this.onChange}\r\n              value={this.state.date}\r\n            />\r\n\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              onChange={this.onChange}\r\n              value={this.state.description}\r\n            />\r\n\r\n            {this.state.showAddForm && (\r\n              <div className=\"add-form-buttons\">\r\n                <button className=\"btn btn-add\" onClick={this.addNewEntry}>\r\n                  Add\r\n                </button>\r\n                <button className=\"btn btn-cancel\" onClick={this.cancelEntry}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.showEditForm && (\r\n              <div className=\"edit-form-buttons\">\r\n                <button className=\"btn btn-edit\" onClick={this.editEntry}>\r\n                  Edit\r\n                </button>\r\n                <button className=\"btn btn-cancel\" onClick={this.cancelEntry}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            )}\r\n          </form>\r\n        )}\r\n\r\n        <div className=\"experience-details-container\">\r\n          <article>\r\n            {this.props.entries.map((entry, index) => {\r\n              return (\r\n                <div className=\"experience-entry\" key={index}>\r\n                  <div className=\"experience-entry-header\">\r\n                    <h3>{entry.position}</h3>\r\n                    <div>\r\n                      <span>{entry.date} </span>\r\n                      <button\r\n                        className=\"btn btn-delete\"\r\n                        data-id={index}\r\n                        onClick={this.removeEntry}\r\n                      >\r\n                        X\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-edit\"\r\n                        data-id={index}\r\n                        onClick={this.showEditForm}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <p>\r\n                    <strong>\r\n                      {entry.company} - {entry.location}\r\n                    </strong>\r\n                  </p>\r\n\r\n                  <ul>\r\n                    {entry.description.map((detail, index) => {\r\n                      return <li key={index}>{detail}</li>;\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })}\r\n          </article>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExperienceSection;\r\n","import React, { Component } from 'react';\r\n\r\nclass PreviewButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      preview: false,\r\n    };\r\n  }\r\n\r\n  togglePreview = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ preview: !this.state.preview });\r\n\r\n    let buttons = document.querySelectorAll('button');\r\n    let previewButton = document.querySelector('.btn-preview');\r\n    let forms = document.querySelectorAll('form');\r\n\r\n    buttons.forEach((button) => {\r\n      if (button.style.display !== 'none') {\r\n        button.style.display = 'none';\r\n      } else {\r\n        button.style.display = 'block';\r\n        if (!this.state.preview) {\r\n          document.querySelector('.add-form-buttons').style.display = 'flex';\r\n        }\r\n      }\r\n    });\r\n\r\n    forms.forEach((form) => {\r\n      if (form.style.display !== 'none') {\r\n        form.style.display = 'none';\r\n      } else {\r\n        form.style.display = 'grid';\r\n      }\r\n    });\r\n\r\n    previewButton.style.display = 'block';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.togglePreview} className=\"btn btn-preview\">\r\n        {this.state.preview ? 'Edit' : 'Preview'}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreviewButton;\r\n","import React from 'react';\r\nimport ResumeHeader from './ResumeHeader';\r\nimport EducationSection from './EducationSection';\r\nimport ExperienceSection from './ExperienceSection';\r\nimport PreviewButton from './PreviewButton';\r\n\r\nclass Resume extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // State management\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      city: '',\r\n      province: '',\r\n      githubURL: '',\r\n      linkedinURL: '',\r\n      portfolioURL: '',\r\n      education: [],\r\n      experience: [],\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    let target = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    this.setState((state, props) => ({\r\n      [target]: value,\r\n    }));\r\n  };\r\n\r\n  addEntry = (entry, section) => {\r\n    this.setState({\r\n      [section]: [...this.state[section], entry],\r\n    });\r\n  };\r\n\r\n  deleteEntry = (index, section) => {\r\n    let entries = [...this.state[section]];\r\n\r\n    if (index !== -1) {\r\n      entries.splice(index, 1);\r\n      this.setState({ [section]: entries });\r\n    }\r\n  };\r\n\r\n  editEntry = (index, section, updatedEntry) => {\r\n    let entries = this.state[section];\r\n    let entry = entries[index];\r\n    let keys = Object.keys(entry);\r\n\r\n    keys.forEach((key) => {\r\n      entry[key] = updatedEntry[key];\r\n    });\r\n\r\n    this.setState({ [section]: entries });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"resume-container\">\r\n        <PreviewButton />\r\n        <ResumeHeader onChange={this.onChange} />\r\n        <EducationSection\r\n          addEducation={this.addEntry}\r\n          editEducation={this.editEntry}\r\n          removeEducation={this.deleteEntry}\r\n          entries={this.state.education}\r\n        />\r\n        <ExperienceSection\r\n          addExperience={this.addEntry}\r\n          editExperience={this.editEntry}\r\n          removeExperience={this.deleteEntry}\r\n          entries={this.state.experience}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import './App.css';\nimport Resume from './components/Resume';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Resume Generator</h1>\n      </header>\n      <Resume />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}